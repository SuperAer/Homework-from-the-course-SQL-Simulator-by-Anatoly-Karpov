### Задача 13.

---

Имея таблицу с заказами, входящими в них товарами и ценами на эти товары, можно теперь легко посчитать стоимость каждого заказа.

---

**Задание:**

Используя запрос из предыдущего задания, рассчитайте суммарную стоимость каждого заказа. Выведите колонки с id заказов и их стоимостью. Колонку со стоимостью заказа назовите `order_price`. Результат отсортируйте по возрастанию id заказа.

Добавьте в запрос оператор `LIMIT` и выведите только первые 1000 строк результирующей таблицы.

Поля в результирующей таблице: `order_id`, `order_price`

---

 **Ожидаемый результат**

|order_id|order_price|
|---|---|
|1|175.0|
|2|394.0|
|3|493.0|
|4|156.0|
|5|51.0|
|...|...|
|499|388.0|
|500|679.0|
|501|530.0|
|502|664.0|
|503|170.0|
|...|...|
|996|295.0|
|997|150.0|
|998|358.0|
|999|289.0|
|1000|69.0|

Affected rows: 1000

---

# Решение:
**Мое решение и решение Автора курса совпадают:**

	SELECT 
	    order_id,
	    SUM(price) AS order_price
	    
	FROM 
	
	    (SELECT order_id, product_ids, unnest (product_ids) AS product_id FROM orders) b
	    
	    LEFT JOIN 
	    
	    products 
	    
	    USING (product_id)
	    
	GROUP BY order_id
	ORDER BY order_id 
	LIMIT 1000
