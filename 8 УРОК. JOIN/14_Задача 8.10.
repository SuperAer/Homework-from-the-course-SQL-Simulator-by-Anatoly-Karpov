### Задача 10.

---

Теперь немного уточним наш запрос, поскольку нас интересуют не все заказы из таблицы `user_actions`, а только те, которые не были отменены пользователями, причём уникальные.

---

**Задание:**

Снова объедините таблицы `user_actions` и `orders`, но теперь оставьте только уникальные неотменённые заказы (мы делали похожий запрос [на прошлом уроке](https://lab.karpov.courses/learning/152/module/1762/lesson/17928/53213/257127/)). Остальные условия задачи те же: вывести id пользователей и заказов, а также список товаров в заказе. Отсортируйте таблицу по id пользователя по возрастанию, затем по id заказа — тоже по возрастанию.

Добавьте в запрос оператор `LIMIT` и выведите только первые 1000 строк результирующей таблицы.

Поля в результирующей таблице: `user_id`, `order_id`, `product_ids`

---

**Пояснение:**

Обратите внимание, что отфильтровать значения вы можете двумя способами. Это можно сделать либо до объединения таблиц, либо после него. Рекомендуется делать фильтрацию до объединения, так как в таком случае вы заранее уменьшаете количество строк в одной из таблиц и тем самым ускоряете процесс объединения. Однако для этого потребуется написать вложенный запрос.

---

 **Ожидаемый результат**

|user_id|order_id|product_ids|
|---|---|---|
|1|1|[65, 28]|
|1|4683|[1, 15, 40]|
|1|22901|[65, 72, 83]|
|1|23149|[6, 84, 32]|
|2|2|[35, 30, 42, 34]|
|...|...|...|
|141|153|[21, 45]|
|141|3458|[24, 23, 85]|
|141|4515|[4, 72, 64, 81]|
|141|4525|[29, 66, 8, 74, 66]|
|141|46568|[66, 70]|
|...|...|...|
|248|13935|[75, 28, 86]|
|248|15518|[67, 79, 63]|
|249|287|[26, 74, 53, 23]|
|249|758|[45, 57, 78]|
|249|7347|[30, 14, 6, 9]|

Affected rows: 1000

---

# Решения: 

**Мое решение:**

	WITH co AS 
	    (SELECT order_id 
	    FROM user_actions 
	    WHERE action = 'cancel_order')
	
	
	SELECT 
	    user_id, 
	    order_id, 
	    product_ids
	FROM 
	    (SELECT user_id, order_id FROM user_actions WHERE order_id not in (SELECT * FROM co)) a
	
	    LEFT JOIN 
	
	    (SELECT order_id, product_ids FROM orders WHERE order_id not in (SELECT * FROM co)) b
	
	    USING (order_id)
	
	ORDER BY user_id, order_id
	LIMIT 1000


**Вариант верного решения:**

	SELECT user_id,
	       order_id,
	       product_ids
	FROM   (SELECT user_id,
	               order_id
	        FROM   user_actions
	        WHERE  order_id not in (SELECT order_id
	                                FROM   user_actions
	                                WHERE  action = 'cancel_order')) t
	    LEFT JOIN orders using(order_id)
	ORDER BY user_id, order_id limit 1000
