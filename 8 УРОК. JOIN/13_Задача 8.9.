### Задача 9.

---

Кажется, мы рассмотрели уже достаточно примеров объединения таблиц. Пора переходить к практике!

Давайте проведём небольшую аналитику нашего сервиса и посчитаем, сколько в среднем товаров заказывает каждый пользователь.

Задача может звучать довольно абстрактно на языке бизнеса, но не переживайте! Будем решать её поэтапно, постепенно переводя её на язык SQL.

---

**Задание:**

Для начала объедините таблицы `user_actions` и `orders` — это вы уже умеете делать. В качестве ключа используйте поле `order_id`. Выведите id пользователей и заказов, а также список товаров в заказе. Отсортируйте таблицу по id пользователя по возрастанию, затем по id заказа — тоже по возрастанию.

Добавьте в запрос оператор `LIMIT` и выведите только первые 1000 строк результирующей таблицы.

Поля в результирующей таблице: `user_id`, `order_id`, `product_ids`

---

**Пояснение:**

Перед тем как объединять таблицы, подумайте, какой тип соединения можно использовать. Попробуйте разные способы и сравните результаты.

---

 **Ожидаемый результат**

|user_id|order_id|product_ids|
|---|---|---|
|1|1|[65, 28]|
|1|4683|[1, 15, 40]|
|1|22901|[65, 72, 83]|
|1|23149|[6, 84, 32]|
|2|2|[35, 30, 42, 34]|
|...|...|...|
|128|16000|[57, 71]|
|128|16000|[57, 71]|
|128|43280|[72, 47, 40, 24]|
|129|140|[72, 76, 26]|
|129|1222|[63, 31, 20]|
|...|...|...|
|227|12572|[76, 47, 37, 31]|
|227|12578|[58]|
|227|23268|[74, 25, 67]|
|227|25873|[74, 72, 46]|
|227|25885|[40, 58, 83]|

Affected rows: 1000

---

# Решения:

**Мое:**

	SELECT 
	    user_id, 
	    order_id, 
	    product_ids
	FROM orders
	    LEFT JOIN 
	    user_actions
	    USING (order_id)
	ORDER BY user_id, order_id
	LIMIT 1000


**Вариант верного решения:**

	SELECT user_id,
	       order_id,
	       product_ids
	FROM   user_actions
	    LEFT JOIN orders using(order_id)
	ORDER BY user_id, order_id limit 1000
