### Задача 1.

---

Начнём знакомство с оконными функциями с простых задач. Для начала поработаем с ранжирующими функциями:

```
SELECT ROW_NUMBER() OVER (PARTITION BY ... ORDER BY ... ROWS/RANGE BETWEEN ...) AS row_number
FROM table

SELECT RANK() OVER (PARTITION BY ... ORDER BY ... ROWS/RANGE BETWEEN ...) AS rank
FROM table

SELECT DENSE_RANK() OVER (PARTITION BY ... ORDER BY ... ROWS/RANGE BETWEEN ...) AS dense_rank
FROM table
```

---

**Задание:**

Примените оконные функции к таблице `products` и с помощью ранжирующих функций упорядочьте все товары по цене — от самых дорогих к самым дешёвым. Добавьте в таблицу следующие колонки:

- Колонку `product_number` с порядковым номером товара (функция `ROW_NUMBER`).
- Колонку `product_rank` с рангом товара с пропусками рангов (функция `RANK`).
- Колонку `product_dense_rank` с рангом товара без пропусков рангов (функция `DENSE_RANK`).

---

Не забывайте указывать в окне сортировку записей — без неё ранжирующие функции могут давать некорректный результат, если таблица заранее не отсортирована. Деление на партиции внутри окна сейчас не требуется. Сортировать записи в результирующей таблице тоже не нужно.

Поля в результирующей таблице: `product_id`, `name`, `price`, `product_number`, `product_rank`, `product_dense_rank`

---

После того как решите задачу, посмотрите, что в итоге получилось, и проанализируйте результат.

---

 **Ожидаемый результат**

|product_id|name|price|product_number|product_rank|product_dense_rank|
|---|---|---|---|---|---|
|13|икра|800.0|1|1|1|
|37|баранина|559.0|2|2|2|
|15|масло оливковое|450.0|3|3|3|
|57|свинина|450.0|4|3|3|
|43|кофе без кофеина|400.0|5|5|4|
|...|...|...|...|...|...|
|45|чай зеленый листовой|78.0|42|42|30|
|53|мука|78.0|43|42|30|
|52|квас|76.0|44|44|31|
|38|апельсины|76.0|45|44|31|
|71|яблоки|75.0|46|46|32|
|...|...|...|...|...|...|
|6|сухарики|25.0|83|83|49|
|73|лепешка|15.0|84|84|50|
|5|кофе 3 в 1|15.0|85|84|50|
|10|семечки|12.0|86|86|51|
|54|пакет бумажный|1.0|87|87|52|

Affected rows: 87

---

# Решения:

## Мое решение и решение Автора совпадают:

```
SELECT product_id,
       name,
       price,
       row_number() OVER(ORDER BY price desc) as product_number,
       rank() OVER(ORDER BY price desc) as product_rank,
       dense_rank() OVER(ORDER BY price desc) as product_dense_rank
FROM   products
```
